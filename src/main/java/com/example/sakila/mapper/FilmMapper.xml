<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.FilmMapper">
	<!-- /on/modifyFilm : POST -->
	<update id="updateFilm" parameterType="com.example.sakila.vo.Film">
		UPDATE film
		<set>
			<if test="title != null">
				title = #{title},
			</if>
			<if test="description != null">
				description = #{description},
			</if>
			<if test="releaseYear != 0">
				release_year = #{releaseYear},
			</if>
			<!--  <if test="languageId != 0">
				language_id = #{languageId},
			</if>
			<if test="originalLanguageId != 0">
				original_language_id = #{originalLanguageId},
			</if>  -->
			<if test="rentalDuration != null">
				rental_duration = #{rentalDuration},
			</if>
			<if test="rentalRate != 0">
				rental_rate = #{rentalRate},
			</if>
			<if test="length != 0">
				length = #{length},
			</if>
			<if test="replacementCost != 0">
				replacement_cost = #{replacementCost},
			</if>
			<if test="rating != null">
				rating = #{rating},
			</if>
			<if test="specialFeatures != null">
				special_features = #{specialFeatures}
			</if>
		</set>
		WHERE film_id = #{filmId}
	</update>

	<!-- /on/removeFilm -->
	<delete id="deleteFilmByKey" parameterType="Integer">
		DELETE FROM film
		WHERE film_id = #{filmId}
	</delete>
	
	<!-- filmList - categoryId 선택 -->
	<select id="selectFilmListByCategory" parameterType="Map" resultType="Map">
		SELECT 
			f.film_id filmId
			, f.title 
			, f.release_year releaseYear
			, f.rating 
			, f.rental_duration rentalDuration
			, f.rental_rate rentalRate
			, f.length 
			, f.replacement_cost replacementCost
			, fc.category_id categoryId
		FROM film f INNER JOIN film_category fc
		ON f.film_id = fc.film_id
		WHERE fc.category_id = #{categoryId}
		ORDER BY f.film_id DESC
		LIMIT #{beginRow},#{rowPerPage};
	</select>

	<!-- filmList - categoryId가 null이거나 0 -->
	<select id="selectFilmList" parameterType="Map" resultType="Map">
		SELECT 
			film_id filmId
			, title 
			, release_year releaseYear
			, rating 
			, rental_duration rentalDuration
			, rental_rate rentalRate
			, length 
			, replacement_cost replacementCost
		FROM film
		ORDER BY film_id DESC
		LIMIT #{beginRow},#{rowPerPage};
	</select>

	<!-- 영화 제목 검색 -->
	<select id="selectFilmListByTitle" parameterType="String" resultType="com.example.sakila.vo.Film">
		SELECT
			film_id filmId
			, title
		FROM film
		WHERE title LIKE CONCAT('%',#{searchTitle},'%')
	</select>
	
	<!-- 영화 추가 -->
	<insert id="insertFilm" parameterType="com.example.sakila.vo.Film">
		INSERT INTO film(
				title
				,description
				,release_year
				,language_id
				,original_language_id
				,rental_duration
				,rental_rate
				,length
				,replacement_cost
				,rating
				,special_features
		) VALUES(
				#{title},#{description},#{releaseYear},#{languageId}
				,#{originalLanguageId},#{rentalDuration},#{rentalRate}
				,#{length},#{replacementCost},#{rating},#{specialFeatures}
		)
	</insert>
	
	<!-- filmOne, /on/modify : GET(form) -->
	<select id="selectFilmOne" parameterType="int" resultType="Map">
		SELECT fi.film_id filmId
				, fi.title title
				, fi.description description
				, fi.release_year releaseYear
				, fi.rental_duration rentalDuration
				, fi.rental_rate rentalRate
				, fi.length length
				, fi.replacement_cost replacementCost
				, fi.rating rating
				, fi.special_features specialFeatures
				, fi.last_update lastUpdate
				, fi.original_language_id originalLanguageId
				, la.name language
		FROM film fi INNER JOIN language la
		ON fi.language_id = la.language_id
		WHERE fi.film_id=#{filmId}
	</select>

	<!-- /on/actorOne 배우의 출연 영화 -->
	<select id="selectFilmTitleListByActor" parameterType="int" resultType="com.example.sakila.vo.Film">
		SELECT f.film_id filmId
				, f.title title
				, f.release_year releaseYear
		FROM film_actor fa INNER JOIN film f
		ON fa.film_id = f.film_id
		WHERE fa.actor_id = #{actorId}
		ORDER BY releaseYear
	</select>
</mapper>